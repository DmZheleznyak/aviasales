{"version":3,"sources":["componets/SupportTickets/supportTickets.js","store/actions/actionCreators.js","store/actions/actionTypes.js","componets/Tickets/ticketsInfo.js","containers/Tickets.js","App.js","serviceWorker.js","store/reducers/rootReducers.js","store/store.js","index.js"],"names":["SupportTickets","connect","state","allStops","withoutStops","oneStops","twoStops","threeStops","activeCurrency","dispatch","selectStop","event","type","value","target","checked","selectAllStops","selectCurrency","props","buttonsCurrency","map","currency","react_default","a","createElement","ToggleButton_default","key","selected","Typography_default","variant","Paper_default","className","square","ToggleButtonGroup_default","exclusive","onChange","FormControlLabel_default","control","Checkbox_default","label","TicketsList","showAviatickets","allAviatickets","aviatickets","TicketsListInfo","ticket","price","Grid_default","container","item","xs","Button_default","color","concat","Math","round","departure_time","origin","origin_name","departure_date","stops","component","arrival_time","destination","destination_name","Tickets","spacing","md","componets_SupportTickets_supportTickets","Tickets_ticketsInfo","Component","App","src_containers_Tickets","Boolean","window","location","hostname","match","initialState","tickets","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","_objectSpread2","arguments","length","undefined","action","Object","objectSpread","filterShowAviatickets","toConsumableArray","filter","defineProperty","ReactDOM","render","es","Store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.111644ad.chunk.js","sourcesContent":["import React from 'react';\nimport './supportTickets.css';\n\nimport { connect } from 'react-redux';\nimport { selectStop, selectAllStops , selectCurrency } from '../../store/actions/actionCreators';\n\nimport Paper from '@material-ui/core/Paper';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Button from '@material-ui/core/Button';\n\nconst supportTickets = props => {\n\n\tconst currencies = [ 'RUB', 'EUR', 'USD' ]\n\n\tconst buttonsCurrency = currencies.map( currency => \n\t\t<ToggleButton key={ currency }\n\t\t\tselected = { props.activeCurrency === currency }\n\t\t\tvalue = { currency }\n\t\t>\n\t\t\t{ currency }\n\t\t</ToggleButton>\n\t )\n\t\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h4\">Support</Typography>\n\t\t\t<Paper className=\"support\" square>\n\t\t\t\t<Typography>ВАЛЮТА</Typography>\n\t\t\t\t<ToggleButtonGroup\n\t\t\t\texclusive\n\t\t\t\tonChange = { (event, value) => props.selectCurrency( value ) }\n\t\t\t\t>\n\t\t\t\t\t{ buttonsCurrency }\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t<Typography>КОЛИЧЕСТВО ПЕРЕСАДОК</Typography>\n\t\t\t\t<div className=\"CheckboxGroup\">\n\t\t\t\t\t<div className=\"CheckboxItem\">\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\t\tchecked={ props.allStops } \n\t\t\t\t\t\t\t\t\tvalue=\"all\" \n\t\t\t\t\t\t\t\t\tonChange={ event => props.selectAllStops( event ) }/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"All\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"CheckboxItem\">\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\t\tchecked={ props.withoutStops } \n\t\t\t\t\t\t\t\t\tvalue=\"withoutStops\" \n\t\t\t\t\t\t\t\t\tonChange={ event => props.selectStop( event ) } />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Без пересадок\" />\n\t\t\t\t\t\t{/* <Button className='btnOnly' onClick = { event => console.log(event) }>только</Button> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"CheckboxItem\">\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\t\tchecked={ props.oneStops } \n\t\t\t\t\t\t\t\t\tvalue=\"oneStops\" \n\t\t\t\t\t\t\t\t\tonChange={ event => props.selectStop( event ) } />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"1 пересадка\" />\n\t\t\t\t\t\t{/* <Button className='btnOnly'>только</Button> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"CheckboxItem\">\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\t\tchecked={ props.twoStops } \n\t\t\t\t\t\t\t\t\tvalue=\"twoStops\" \n\t\t\t\t\t\t\t\t\tonChange={ event => props.selectStop( event ) } />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"2 пересадки\" />\n\t\t\t\t\t\t{/* <Button className='btnOnly'>только</Button> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"CheckboxItem\">\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\t\tchecked={ props.threeStops } \n\t\t\t\t\t\t\t\t\tvalue=\"threeStops\" \n\t\t\t\t\t\t\t\t\tonChange={ event => props.selectStop( event ) } />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"3 пересадки\" />\n\t\t\t\t\t\t{/* <Button className='btnOnly'>только</Button> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Paper>\n\t\t</div>\n\t)\n}\n\n\nconst mapStateToProps = state => ({\n\tallStops: state.allStops,\n\twithoutStops: state.withoutStops,\n\toneStops: state.oneStops,\n\ttwoStops: state.twoStops,\n\tthreeStops: state.threeStops,\n\n\tactiveCurrency: state.activeCurrency\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tselectStop: event => dispatch( selectStop( event ) ),\n\tselectAllStops: event => dispatch( selectAllStops( event ) ),\n\tselectCurrency: value => dispatch( selectCurrency( value ) )\n})\n\nconst SupportTickets = connect(mapStateToProps, mapDispatchToProps)(supportTickets)\n\nexport default SupportTickets\n","import * as actionTypes from './actionTypes';\n\nexport const selectStop = event => ({\n\ttype: actionTypes.SELECT_STOPS,\n\tvalue: event.target.value, \n\tchecked: event.target.checked\n})\n\nexport const selectAllStops = event => ({\n\ttype: actionTypes.SELECT_ALL_STOPS,\n\tvalue: event.target.value,\n\tchecked: event.target.checked\n})\n\nexport const selectOnlyOneStop = event => ({\n\ttype: actionTypes.SELECT_ONLY_ONE_STOP,\n\tvalue: event.target.value,\n\tchecked: event.target.checked\n})\n\nexport const selectCurrency = value => ({\n\ttype: actionTypes.SELECT_CURRENCY,\n\tvalue\n})","export const SELECT_STOPS = 'SELECT_STOP'\nexport const SELECT_ALL_STOPS = 'SELECT_ALL_STOPS'\nexport const SELECT_ONLY_ONE_STOP = 'SELECT_ONLY_ONE_STOP'\n\nexport const SELECT_CURRENCY = 'SELECT_CURRENCY'","import React from 'react';\nimport { connect } from 'react-redux';\nimport './ticketsInfo.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nconst ticketsList = props => {\n\n\tconst TicketsListInfo = props.showAviatickets.map(ticket => {\n\n\t\tconst showCurrency = () => {\n\t\t\tif (props.activeCurrency === 'RUB') {\n\t\t\t\treturn `${ticket.price} RUB`\n\t\t\t}\n\n\t\t\tif (props.activeCurrency === 'USD') {\n\t\t\t\treturn `${Math.round( (ticket.price / 66.5) * 10 ) / 10} USD`\n\t\t\t}\n\n\t\t\tif (props.activeCurrency === 'EUR') {\n\t\t\t\treturn `${Math.round( (ticket.price / 75) * 10 ) / 10} EUR`\n\t\t\t}\n\t\t}\n\n\t\tconst showStops = () => {\n\t\t\tif (ticket.stops === 0) {\n\t\t\t\treturn (\n\t\t\t\t\t<Typography component='p'> Без пересадок </Typography>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (ticket.stops === 1) {\n\t\t\t\treturn (\n\t\t\t\t\t<Typography component='p'> 1 пересадка </Typography>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (ticket.stops > 1 || ticket.stops < 5) {\n\t\t\t\treturn (\n\t\t\t\t\t<Typography component='p'> {ticket.stops} пересадки </Typography>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<Paper \n\t\t\tclassName=\"info\" \n\t\t\tkey={ ticket.price }>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid \n\t\t\t\t\titem xs={4} >\n\t\t\t\t\t\t<Typography \n\t\t\t\t\t\tvariant='h6'>\n\t\t\t\t\t\t\t<span className=\"nameAirline\">Turkish <br /> Airline.</span>\n\t\t\t\t\t\t\t<span>Logo</span>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Button className=\"btnBuyTickets\" \n\t\t\t\t\t\tvariant='contained' \n\t\t\t\t\t\tcolor=\"secondary\">\n\t\t\t\t\t\t\tКупить <br /> { showCurrency() }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t<div className=\"schedule\">\n\t\t\t\t\t\t\t<div className=\"schedule-info\">\n\t\t\t\t\t\t\t\t<span className=\"time\">{ ticket.departure_time }</span>\n\t\t\t\t\t\t\t\t<span className=\"location\">{ ticket.origin }, { ticket.origin_name }</span>\n\t\t\t\t\t\t\t\t<span className=\"date\">{ ticket.departure_date }</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{ showStops() }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"schedule-info\">\n\t\t\t\t\t\t\t\t<span className=\"time\">{ ticket.arrival_time }</span>\n\t\t\t\t\t\t\t\t<span className=\"location\">{ ticket.destination }, {ticket.destination_name}</span>\n\t\t\t\t\t\t\t\t<span className=\"date\">{ ticket.arrival_time }</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t) \n\t})\n\t\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant='h4'>Tickets List</Typography>\n\t\t\t{ TicketsListInfo }\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = state => ({\tshowAviatickets: state.showAviatickets,\tallAviatickets: state.aviatickets,\tactiveCurrency: state.activeCurrency })\n\nconst TicketsList = connect( mapStateToProps )( ticketsList )\n\nexport default TicketsList;","import React, { Component } from 'react';\nimport './Tickets.css';\nimport Grid from '@material-ui/core/Grid';\n\nimport SupportTickets from '../componets/SupportTickets/supportTickets';\nimport TicketsInfo from '../componets/Tickets/ticketsInfo';\n\nclass Tickets extends Component {\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Tickets\">\n\t\t\t\t<Grid container spacing={24}>\n\t\t\t\t\t<Grid item md={4} xs={12}>\n\t\t\t\t\t\t<SupportTickets />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={8} xs={12}>\n\t\t\t\t\t\t<TicketsInfo />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Tickets;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Tickets from './containers/Tickets';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            <code>AviaSales</code>\n          </p>\n        </header>\n\t\t\t\t<main>\n\t\t\t\t\t<Tickets />\n\t\t\t\t</main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import AllTickets from '../../tickets_example/tickets.json';\n\nconst initialState = {\n\taviatickets: AllTickets.tickets, \n\tactiveCurrency: 'RUB',\n\tallStops: false,\n\twithoutStops: false,\n\toneStops: false,\n\ttwoStops: false,\n\tthreeStops: false,\n\tshowAviatickets: []\n}\n\nexport const rootReducer = (state = initialState, action) => {\n\tswitch( action.type ) {\n\t\tcase 'SELECT_CURRENCY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveCurrency: action.value\n\t\t\t}\n\t\tcase 'SELECT_STOP':\n\t\t\tlet filterShowAviatickets = [ ...state.showAviatickets ]\n\n\t\t\tif ( action.checked && action.value === 'withoutStops') {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets, \n\t\t\t\t\t...state.aviatickets.filter( ticket => ticket.stops === 0 ) \n\t\t\t\t]\n\t\t\t}\n\n\t\t\tif ( !action.checked && action.value === 'withoutStops') {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets.filter( ticket => ticket.stops !== 0 ) \n\t\t\t\t]\n\t\t\t}\n\t\t\t\n\t\t\tif ( action.checked && action.value === 'oneStops' ) {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets, \n\t\t\t\t\t...state.aviatickets.filter( ticket => ticket.stops === 1 ) \n\t\t\t\t]\n\t\t\t}\n\n\t\t\tif ( !action.checked && action.value === 'oneStops') {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets.filter( ticket => ticket.stops !== 1 ) \n\t\t\t\t]\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tif ( action.checked && action.value === 'twoStops' ) {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets, \n\t\t\t\t\t...state.aviatickets.filter( ticket => ticket.stops === 2 ) \n\t\t\t\t]\n\t\t\t}\n\n\t\t\tif ( !action.checked && action.value === 'twoStops') {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets.filter( ticket => ticket.stops !== 2 ) \n\t\t\t\t]\n\t\t\t}\n\n\t\t\tif ( action.checked && action.value === 'threeStops' ) {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets, \n\t\t\t\t\t...state.aviatickets.filter( ticket => ticket.stops === 3 ) \n\t\t\t\t]\n\t\t\t}\n\n\t\t\tif ( !action.checked && action.value === 'threeStops') {\n\t\t\t\tfilterShowAviatickets = [\n\t\t\t\t\t...filterShowAviatickets.filter( ticket => ticket.stops !== 3 ) \n\t\t\t\t]\n\t\t\t}\n\n\t\t\treturn { \n\t\t\t\t...state,\n\t\t\t\t[action.value]: action.checked,\n\t\t\t\tshowAviatickets: filterShowAviatickets\n\t\t\t}\n\n\t\tcase 'SELECT_ALL_STOPS':\n\t\t\tif (action.checked) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tallStops: true,\n\t\t\t\t\twithoutStops: true,\n\t\t\t\t\toneStops: true,\n\t\t\t\t\ttwoStops: true,\n\t\t\t\t\tthreeStops: true,\n\t\t\t\t\tshowAviatickets: [ ...state.aviatickets ]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tallStops: false,\n\t\t\t\t\twithoutStops: false,\n\t\t\t\t\toneStops: false,\n\t\t\t\t\ttwoStops: false,\n\t\t\t\t\tthreeStops: false,\n\t\t\t\t\tshowAviatickets: []\n\t\t\t\t}\n\t\t\t}\n\t\tdefault: return state;\n\t}\n}\n","import { createStore } from 'redux';\n\nimport { rootReducer } from './reducers/rootReducers';\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = createStore( rootReducer, reduxDevTools )\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport Store from './store/store'\n\nReactDOM.render(\n\t<Provider store = { Store }>\n\t\t<App />\n\t</Provider>\t, \n\t\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}